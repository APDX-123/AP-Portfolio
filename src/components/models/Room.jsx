/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 rooom.glb -T 
Files: rooom.glb [1.4MB] > /Users/hsuwinlatt/Desktop/Work/jsm pj/three-d-portfolio-2025/public/models/rooom-transformed.glb [115.81KB] (92%)
*/

import React, { useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { Bloom, EffectComposer } from "@react-three/postprocessing";
import { BlendFunction } from "postprocessing";
import * as THREE from "three";

export function Room(props) {
  const { nodes, materials, scene } = useGLTF("/models/rooom-transformed.glb");

  const material = new THREE.MeshStandardMaterial({
    color: "#7678ed", // Slight gray instead of pure white
    roughness: 0.6,
    metalness: 0.1,
  });

  useEffect(() => {
    scene.traverse((child) => {
      if (child.isMesh) {
        console.log(child.name);
      }
    });
  }, []);

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes._________6_blinn1_0.geometry} material={material} />
      <EffectComposer>
        <Bloom
          intensity={1.5} // Strength of the bloom
          luminanceThreshold={0.2} // Minimum luminance needed
          luminanceSmoothing={0.9} // Smooth transition
          blendFunction={BlendFunction.ADD} // How it blends
        />
      </EffectComposer>

      <mesh
        geometry={nodes.emis_lambert1_0.geometry}
        material={materials.lambert1}
      />
      <mesh
        geometry={nodes.window4_phong1_0.geometry}
        material={materials.phong1}
      />
    </group>
  );
}

useGLTF.preload("/models/rooom-transformed.glb");
