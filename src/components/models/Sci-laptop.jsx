/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 sci-laptop.glb -T 
Files: sci-laptop.glb [540.4KB] > /Users/hsuwinlatt/Desktop/Work/jsm pj/three-d-portfolio-2025/public/models/sci-laptop-transformed.glb [114.08KB] (79%)
Author: assetfactory (https://sketchfab.com/assetfactory)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/sci-fi-computer-game-ready-53e7eeb0f69540d2892ad6aa5f47bd39
Title: Sci - fi computer game ready
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

import { EffectComposer, SelectiveBloom } from "@react-three/postprocessing";
import { useFrame, useThree } from "@react-three/fiber";

import * as THREE from "three";

export function SciFiLaptop(props) {
  const { nodes, materials } = useGLTF("/models/sci-laptop-transformed.glb");

  const meshRef = useRef();
  const groupRef = useRef();
  const { pointer } = useThree();

  useFrame(() => {
    if (groupRef.current) {
      console.log(groupRef.current);
      // Smoothly interpolate rotation based on mouse movement
      groupRef.current.rotation.x = THREE.MathUtils.lerp(
        groupRef.current.rotation.x,
        -pointer.y * 0.3,
        0.1
      );
      groupRef.current.rotation.y = THREE.MathUtils.lerp(
        groupRef.current.rotation.y,
        pointer.x * 0.5,
        0.1
      );
    }
  });

  return (
    <group ref={groupRef} {...props} dispose={null}>
      <EffectComposer>
        <SelectiveBloom
          selection={[meshRef]} // selection of objects that will have bloom effectintensity={1.5}
          mipmapBlur
          anisotropy={5}
          luminanceThreshold={0.9} // luminance threshold. Raise this value to mask out darker elements in the scene.
          luminanceSmoothing={0.025} // smoothness of the luminance threshold. Range is [0, 1]
        />
      </EffectComposer>
      <mesh
        ref={meshRef}
        geometry={nodes.Plane002_digital_displays_0.geometry}
        material={materials.digital_displays}
        position={[0, 0.289, 3.122]}
        rotation={[-1.469, 0, 0]}
      />
      <mesh
        geometry={nodes.Plane002_digital_display_sides_0.geometry}
        material={materials.digital_display_sides}
        position={[0, 0.289, 3.122]}
        rotation={[-1.469, 0, 0]}
      />
      <mesh
        geometry={nodes.Circle_metal_2_0.geometry}
        material={materials.metal_2}
        position={[0, 0, -0.948]}
        rotation={[0, Math.PI / 2, 0]}
        scale={1.238}
      />
      <mesh
        geometry={nodes.Circle_metal_1_0.geometry}
        material={materials.metal_1}
        position={[0, 0, -0.948]}
        rotation={[0, Math.PI / 2, 0]}
        scale={1.238}
      />
    </group>
  );
}

useGLTF.preload("/models/sci-laptop-transformed.glb");
